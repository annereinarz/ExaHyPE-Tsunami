// This file was generated by the ExaHyPE toolkit.
// It will not be overwritten.
//
//
// ========================
//   www.exahype.eu
// ========================
#include "ProbeWriter19.h"
#include "iodir.h"

std::vector<double> solution19 = {-1234,-1234};
bool isWritten19 = false;

SWE::ProbeWriter19::ProbeWriter19(SWE::MySWESolver& solver) {
  // @TODO Please insert your code here.
}

SWE::ProbeWriter19::~ProbeWriter19() {
}

void SWE::ProbeWriter19::startPlotting( double time) {
  // @TODO Please insert your code here.
}


void SWE::ProbeWriter19::finishPlotting() {
  // @TODO Please insert your code here.
}

void SWE::ProbeWriter19::mapQuantities(
    const tarch::la::Vector<DIMENSIONS, double>& offsetOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& sizeOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& x,
    const tarch::la::Vector<DIMENSIONS, int>&    pos,
    double* const Q,
    double* const outputQuantities,
    double timeStamp
) {
  //std::vector<std::vector<double>> probe_point = {{ 545.735266126, 62.7164740303 },
  //						     { 1050.67821,   798.352124}};
  // TODO write out into file
  if(Q[0]+Q[3] > solution19[1]){
	  solution19[0] = timeStamp;
	  solution19[1] = Q[0]+Q[3];
	  //std::cout <<"Probe" << 0 << " has time " << muq::solution[0+2*0]/60 << " and height " << muq::solution[1+2*0]*1000 << std::endl;
  }
  if(timeStamp>5550.0 && timeStamp<10000 && isWritten19==false){
    auto outputs = get_output("Probe19");
	  std::ofstream outputsfile(outputs);
	  outputsfile << solution19[0] << std::endl;
	  outputsfile << solution19[1] << std::endl;
	  outputsfile.close();
	  isWritten19 = true;
  }

}
