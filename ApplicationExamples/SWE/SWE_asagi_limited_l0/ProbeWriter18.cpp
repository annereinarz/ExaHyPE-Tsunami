// This file was generated by the ExaHyPE toolkit.
// It will not be overwritten.
//
//
// ========================
//   www.exahype.eu
// ========================
#include "ProbeWriter18.h"
#include "iodir.h"

std::vector<double> solution18 = {-1234,-1234};
bool isWritten = false;

SWE::ProbeWriter18::ProbeWriter18(SWE::MySWESolver& solver) {
  // @TODO Please insert your code here.
}

SWE::ProbeWriter18::~ProbeWriter18() {
}

void SWE::ProbeWriter18::startPlotting( double time) {
  // @TODO Please insert your code here.
}


void SWE::ProbeWriter18::finishPlotting() {
  // @TODO Please insert your code here.
}

void SWE::ProbeWriter18::mapQuantities(
    const tarch::la::Vector<DIMENSIONS, double>& offsetOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& sizeOfPatch,
    const tarch::la::Vector<DIMENSIONS, double>& x,
    const tarch::la::Vector<DIMENSIONS, int>&    pos,
    double* const Q,
    double* const outputQuantities,
    double timeStamp
) {
  //std::vector<std::vector<double>> probe_point = {{ 545.735266126, 62.7164740303 },
  //TODO write out into file						     { 1050.67821,   798.352124}};
  for(int i=0; i < 4; i++){
    outputQuantities[i] = Q[i];
  }
  if(Q[3]+Q[0] > solution18[1]){
	  solution18[0] = timeStamp; 
	  solution18[1] = Q[3]+Q[0];
	  //std::cout <<"Probe" << 0 << " has time " << muq::solution[0+2*0]/60 << " and height " << muq::solution[1+2*0]*1000 << std::endl;
  }
  if(timeStamp>2500.0 && timeStamp<10000 && isWritten==false){
    auto outputs = get_output("Probe18");
    std::ofstream outputsfile(outputs);
    if(!outputsfile.is_open())
        std::cout << "File could not be opened" << std::endl;
    typedef std::numeric_limits<double> dl;
    outputsfile << std::fixed << std::setprecision(dl::digits10);
    outputsfile << solution18[0] << std::endl;
    outputsfile << solution18[1] << std::endl;
    outputsfile.close();
    isWritten = true;
  }

}
